  <%

  cache("common/partials/maps/#{@ufo_list.hash}", expires_in: 12.hours) do

  zoom = 2
  center = [-40.57035354999999, 34.16473667601063]

  zoom = map_zoom if defined?(map_zoom)
  center = map_center if defined?(map_center)

  if defined?(selected_ufo) && selected_ufo.coord
    zoom = 8
    center = [selected_ufo.coord[0], selected_ufo.coord[1]]
  end

  if defined?(marker)
    center = [marker.coord[1], marker.coord[0]]
  end

  %>

  <script type="text/javascript">

    var geojson = {
				type: 'FeatureCollection',
				features: [
    <%
    	index = 0
     	ufo_list.each do |ufo|
		    begin
		      if index == 0
            if defined?(selected_ufo)
              index += 1
          %>
            {
              type: 'Feature',
              geometry: {
                type: 'Point',
                coordinates: [<%=selected_ufo.coord[0]%>, <%=selected_ufo.coord[1]%>]
              },
              properties: {
                title: '<strong><%=selected_ufo.location.gsub("'", %q(\\\'))%></strong>',
                description: '<%= format_date selected_ufo.sighted_at %><br/><strong><%= link_to "View sighting", :controller => "sightings", :action => "search", :id => selected_ufo.id, :title => friendly_title(selected_ufo) %></strong>'
              }
            },
          <%
            end
          else
            
          %>,<%

		      end

            index += 1
		    %>
        {
          type: 'Feature',
          geometry: {
            type: 'Point',
            coordinates: [<%=ufo.coord[0]%>, <%=ufo.coord[1]%>]
          },
          properties: {
            title: '<strong><%=ufo.location.gsub("'", %q(\\\'))%></strong>',
            description: '<%= format_date ufo.sighted_at %><br/><strong><%= link_to "View sighting", :controller => "sightings", :action => "search", :id => ufo.id, :title => friendly_title(ufo) %></strong>'
          }
        }
			  <%
			  rescue => ex
          logger.info "Data error with doc #{ufo.id} - #{ex.class}: #{ex.message}"
          next
			  end
      end
      # 'mapbox://styles/fjfdepedro/cjn5ke8rx0g6c2rpffg1z6una'
      # 'mapbox://styles/fjfdepedro/cjnc849ms0g6l2rsc5edfb4gl'
		%>
                 ]
			};
		  mapboxgl.accessToken = 'pk.eyJ1IjoiZmpmZGVwZWRybyIsImEiOiJjam40bWswc3k1ZmgwM3BueG45YXZoZ3MwIn0.LpHFrAER3JjOAZwnyDnrqw';
      var map = new mapboxgl.Map({
        container: 'sightings-map',
        style: 'mapbox://styles/fjfdepedro/cjnc849ms0g6l2rsc5edfb4gl',
        center: <%=center%>,
        zoom: <%=zoom%>
      });
      map.addControl(new mapboxgl.NavigationControl());

      // add markers to map
      geojson.features.forEach(function(marker) {
 
        // create a HTML element for each feature
        var el = document.createElement('div');
        el.className = 'marker';

        // make a marker for each feature and add to the map
        new mapboxgl.Marker(el)
        .setLngLat(marker.geometry.coordinates)
        .addTo(map);

        new mapboxgl.Marker(el)
        .setLngLat(marker.geometry.coordinates)
        .setPopup(new mapboxgl.Popup({ offset: 25 }) // add popups
        .setHTML('<h3>' + marker.properties.title + '</h3><p>' + marker.properties.description + '</p>'))
        .addTo(map);
        
      });

  </script>

  <%
  end
  %>
