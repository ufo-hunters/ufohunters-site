<% cache("stats/content", expires_in: 1.day) do %>



    <div class="row">
      <div class="span12">
        <h2>A glance at our data</h2>
        <p>The following map and graphs show the recent UFO activity all over the world.</p>
        <p>The graphs are dinamically generated to keep them up to date as our database is updated. <strong>More graphs coming soon !!</strong></p>
      </div>
    </div>

    <div class="row">
      <div class="span12">
        <h3>UFO Activity Heat Map</h3>
        <div id="map-canvas" style="width: 100%; height: 600px;"></div>
        <script>
          mapboxgl.accessToken = 'pk.eyJ1IjoiZmpmZGVwZWRybyIsImEiOiJjam40bWswc3k1ZmgwM3BueG45YXZoZ3MwIn0.LpHFrAER3JjOAZwnyDnrqw';
          var map = new mapboxgl.Map({
              container: 'map-canvas',
              style: 'mapbox://styles/fjfdepedro/cjnc849ms0g6l2rsc5edfb4gl',
              center: [5, 39],
              zoom: 1
          });

          map.on('load', function() {
              // Add a geojson point source.
              // Heatmap layers also work with a vector tile source.
              map.addSource('earthquakes', {
                  "type": "geojson",
                  "data": "<%=map_json_path%>"
              });

              map.addLayer({
                  "id": "earthquakes-heat",
                  "type": "heatmap",
                  "source": "earthquakes",
                  "maxzoom": 9,
                  "paint": {
                      // Increase the heatmap weight based on frequency and property magnitude
                      "heatmap-weight": [
                          "interpolate",
                          ["linear"],
                          ["get", "mag"],
                          0, 0,
                          6, 1
                      ],
                      // Increase the heatmap color weight weight by zoom level
                      // heatmap-intensity is a multiplier on top of heatmap-weight
                      "heatmap-intensity": [
                          "interpolate",
                          ["linear"],
                          ["zoom"],
                          0, 1,
                          9, 3
                      ],
                      // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).
                      // Begin color ramp at 0-stop with a 0-transparancy color
                      // to create a blur-like effect.
                      "heatmap-color": [
                          "interpolate",
                          ["linear"],
                          ["heatmap-density"],
                          0, "rgba(33,102,172,0)",
                          0.2, "rgb(103,169,207)",
                          0.4, "rgb(209,229,240)",
                          0.6, "rgb(253,219,199)",
                          0.8, "rgb(239,138,98)",
                          1, "rgb(178,24,43)"
                      ],
                      // Adjust the heatmap radius by zoom level
                      "heatmap-radius": [
                          "interpolate",
                          ["linear"],
                          ["zoom"],
                          0, 2,
                          9, 20
                      ],
                      // Transition from heatmap to circle layer by zoom level
                      "heatmap-opacity": [
                          "interpolate",
                          ["linear"],
                          ["zoom"],
                          7, 1,
                          9, 0
                      ],
                  }
              }, 'waterway-label');

              map.addLayer({
                  "id": "earthquakes-point",
                  "type": "circle",
                  "source": "earthquakes",
                  "minzoom": 7,
                  "paint": {
                      // Size circle radius by earthquake magnitude and zoom level
                      "circle-radius": [
                          "interpolate",
                          ["linear"],
                          ["zoom"],
                          7, [
                              "interpolate",
                              ["linear"],
                              ["get", "mag"],
                              1, 1,
                              6, 4
                          ],
                          16, [
                              "interpolate",
                              ["linear"],
                              ["get", "mag"],
                              1, 5,
                              6, 50
                          ]
                      ],
                      // Color circle by earthquake magnitude
                      "circle-color": [
                          "interpolate",
                          ["linear"],
                          ["get", "mag"],
                          1, "rgba(33,102,172,0)",
                          2, "rgb(103,169,207)",
                          3, "rgb(209,229,240)",
                          4, "rgb(253,219,199)",
                          5, "rgb(239,138,98)",
                          6, "rgb(178,24,43)"
                      ],
                      "circle-stroke-color": "white",
                      "circle-stroke-width": 1,
                      // Transition from heatmap to circle layer by zoom level
                      "circle-opacity": [
                          "interpolate",
                          ["linear"],
                          ["zoom"],
                          7, 0,
                          8, 1
                      ]
                  }
              }, 'waterway-label');
          });
        </script>
      </div>
    </div>

    <div class="row">
      <div class="span12">
        <h3>UFO Reports by Year</h3>

          <!-- ScatterChart generated in R 3.0.2 by googleVis 0.5.2 package -->
          <!-- Wed Jun 25 12:36:01 2014 -->
          <!-- jsHeader -->
          <script type="text/javascript">

            // jsData
            function gvisDataScatterChartID383519cfdcc () {
              var data = new google.visualization.DataTable();
              var datajson =
              [
              <%
                index = 0
                @reports.each do |report|
                  begin
                    unless index == 0
                    %>,<%
                    end
              %>
                    [<%= report['_id'].to_i %>, <%= report['count'] %>]
              <%
                  index += 1
                  rescue => ex
                    logger.info "Data error with doc #{report['_id']} - #{ex.class}: #{ex.message}"
                    next
                  end
                end
              %>
              ];
              data.addColumn('number','year');
              data.addColumn('number','count');
              data.addRows(datajson);
              return(data);
            }

            // jsDrawChart
            function drawChartScatterChartID383519cfdcc() {
              var data = gvisDataScatterChartID383519cfdcc();
              var options = {};
              options["allowHtml"] = true;
              options["curveType"] = "function";
              options["vAxis"] = {title:'Number of reports'};
              options["hAxis"] = {title:'Year'};
              options["colors"] = ['#d7df21'];

              var chart = new google.visualization.ScatterChart(
                document.getElementById('ScatterChartID383519cfdcc')
              );
              chart.draw(data,options);
            }

            // jsDisplayChart
            (function() {
              var pkgs = window.__gvisPackages = window.__gvisPackages || [];
              var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || [];
              var chartid = "corechart";

              // Manually see if chartid is in pkgs (not all browsers support Array.indexOf)
              var i, newPackage = true;
              for (i = 0; newPackage && i < pkgs.length; i++) {
                if (pkgs[i] === chartid)
                  newPackage = false;
              }
              if (newPackage)
                pkgs.push(chartid);

              // Add the drawChart function to the global list of callbacks
              callbacks.push(drawChartScatterChartID383519cfdcc);
            })();

            function displayChartScatterChartID383519cfdcc() {
              var pkgs = window.__gvisPackages = window.__gvisPackages || [];
              var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || [];
              window.clearTimeout(window.__gvisLoad);
              // The timeout is set to 100 because otherwise the container div we are
              // targeting might not be part of the document yet
              window.__gvisLoad = setTimeout(function() {
                var pkgCount = pkgs.length;
                google.load("visualization", "1", {
                  packages:pkgs, callback: function() {
                    if (pkgCount != pkgs.length) {
                      // Race condition where another setTimeout call snuck in after us; if
                      // that call added a package, we must not shift its callback
                      return;
                    }
                    while (callbacks.length > 0)
                      callbacks.shift()();
                  }
                });
              }, 100);
            }

            // jsFooter

            $(document).ready(function () {
                $(window).resize(function(){
                    drawChartScatterChartID383519cfdcc();
                });
            });
          </script>

          <!-- jsChart -->
          <script type="text/javascript" src="https://www.google.com/jsapi?callback=displayChartScatterChartID383519cfdcc"></script>
          <!-- divChart -->
          <div id="ScatterChartID383519cfdcc" style="width: 100%; height: 500px;">
          </div>

      </div>
    </div>

    <div class="row" style="margin-top: 20px;margin-bottom: 20px">
      <%= render partial: 'common/ads/horizontal_ad' %>
    </div>
<% end %>
